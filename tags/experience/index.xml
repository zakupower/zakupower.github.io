<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>experience on D. Tomov's Ramblings Repository</title><link>https://zakupower.github.io/tags/experience/</link><description>Recent content in experience on D. Tomov's Ramblings Repository</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 08 Nov 2022 19:01:49 +0200</lastBuildDate><atom:link href="https://zakupower.github.io/tags/experience/index.xml" rel="self" type="application/rss+xml"/><item><title>Java 11 to 17 Upgrade</title><link>https://zakupower.github.io/posts/java-17-upgrade/</link><pubDate>Tue, 08 Nov 2022 19:01:49 +0200</pubDate><guid>https://zakupower.github.io/posts/java-17-upgrade/</guid><description>Today I had to migrate our application from Java 11 to Java 17. I think I should get into the habit of always googling stuff and not just thinking &amp;ldquo;Yeah I know how to do it, I am going to be fine&amp;rdquo;. This time I did google what issues might come from the upgrade and thankfully not too many. I followed this guide by Nikita Zemnitsky @ NIX, which does a pretty good job of explaining what issues might come up, so I am not going to list them here again.</description><content>&lt;p>Today I had to migrate our application from Java 11 to Java 17. I think I should get into the habit of always googling stuff and not just thinking &amp;ldquo;Yeah I know how to do it, I am going to be fine&amp;rdquo;. This time I did google what issues might come from the upgrade and thankfully not too many. I followed &lt;a href="https://dev.to/nix/migrating-a-project-from-java-11-to-java-17-a-step-by-step-guide-for-developers-42n">this guide by Nikita Zemnitsky @ NIX&lt;/a>, which does a pretty good job of explaining what issues might come up, so I am not going to list them here again.&lt;/p>
&lt;h3 id="upgrade-your-libraries-frequently">Upgrade your libraries frequently&lt;/h3>
&lt;p>The migration was super easy because my team has a good dependency hygiene and we have already upgraded the troublesome dependencies which were described in the guide long before this Java 17 upgrade. This is something I will be following religiously for all my projects from here on out! I have worked on a lot of different projects, but never have we kept our libraries so up-to-date, as in this one. Yes it is sometimes annoying when a library brakes something, but in the long run the application is way more healthy this way.&lt;/p>
&lt;h3 id="maven-tests-issue">Maven tests issue&lt;/h3>
&lt;p>After the migration, the only issue that was left out of the article by Nikita was that my tests weren&amp;rsquo;t running. We were using the &lt;code>maven-surefire-plugin&lt;/code> to run our tests under maven when building the application. This somehow was causing all our tests to fail with the following error:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>Failed to execute goal org&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">apache&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">maven&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">plugins&lt;/span>&lt;span style="color:#f92672">:&lt;/span>maven&lt;span style="color:#f92672">-&lt;/span>surefire&lt;span style="color:#f92672">-&lt;/span>plugin&lt;span style="color:#f92672">:&lt;/span>2&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">22&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">2&lt;/span>&lt;span style="color:#f92672">:&lt;/span>test &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">default&lt;/span>&lt;span style="color:#f92672">-&lt;/span>test&lt;span style="color:#f92672">)&lt;/span> on project Idlearn&lt;span style="color:#f92672">:&lt;/span> Execution &lt;span style="color:#66d9ef">default&lt;/span>&lt;span style="color:#f92672">-&lt;/span>test of goal org&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">apache&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">maven&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">plugins&lt;/span>&lt;span style="color:#f92672">:&lt;/span>maven&lt;span style="color:#f92672">-&lt;/span>surefire&lt;span style="color:#f92672">-&lt;/span>plugin&lt;span style="color:#f92672">:&lt;/span>2&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">22&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">2&lt;/span>&lt;span style="color:#f92672">:&lt;/span>test failed&lt;span style="color:#f92672">:&lt;/span> Unsupported &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">file&lt;/span> major version 61 &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#f92672">[&lt;/span>Help 1&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Googling the error took me into a rabbit hole of getting the same response and that was &amp;ldquo;You are compiling the tests with java 17, but trying to run them under a different version&amp;rdquo;. Checking my maven setup multiple times with &lt;code>mvn -version&lt;/code>, to make sure I have the right maven version, and it is using the correct java, and my JAVA_HOME path is correct. But it seemed like it was correct, but it was not working. After some time spent googling and trying different approaches, I finally stumbled on &lt;a href="https://stackoverflow.com/questions/71496063/maven-surefire-test-failed-unsupported-class-file-major-version-61">this stack overflow question and answer&lt;/a>. So it turns out the newest version (2.22.2) of &lt;code>maven-surefire-plugin&lt;/code>, that is not a Milestone version, has not upgraded some of its dependencies related to ASM. So you have to add the dependency to it manually. &lt;em>(TBH didn&amp;rsquo;t even know I could do that with plugins)&lt;/em>&lt;/p>
&lt;p>After this issue everything else went smoothly, all tests were green and the application was running!&lt;/p></content></item></channel></rss>